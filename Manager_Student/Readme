bootstrap 下载链接： https://v3.bootcss.com/
实际效果我们可以从这里看  https://v3.bootcss.com/css
所有的图标我们可以参考  https://fontawesome.com/icons?d=gallery ,这个我们也要下载

问题记录：
这里我们的添加按钮用的是a标签，
<a href="" class="btn btn-primary" style="margin-top: 8px" onclick="addshow();">添加</a>
然后去执行函数
    function addshow() {
        $('#addModal').modal('show');
    }
但是这里我遇到了一个问题，就是当我去点击添加的时候，他重新刷新了一下，是疑问href是有一个默认的属性去刷新
这里我们可以把href删除掉或者在href内设置javascript:void(0)就可以了。

这里绑定触发时间我们还可以用另外一种方法
<a class="btn btn-primary" style="margin-top: 8px" id="addshow">添加</a>

<script>
    $(function () {
        bindshowEvent()
    })
    function bindshowEvent() {
        $('#addshow').click(function () {
            $('#addModal').modal('show');
        })
    }
    func
</script>

一点击就绑定触发事件，这里我们可以绑定多个事件

each(function ()
each() 方法规定为每个匹配元素规定运行函数。
each 方法见 http://www.w3school.com.cn/jquery/traversing_each.asp

    var name = $(this).attr('name');
    var value = $(this).val();
    var postData = {};
    postData[name] = value;
    console.log(postData);


attr() 方法设置或返回被选元素的属性和值。
当该方法用于返回属性值，则返回第一个匹配元素的值。  $(selector).attr(attribute)
当该方法用于设置属性值，则为匹配元素设置一个或多个属性/值对。$(selector).attr(attribute,value)


这里我们看到postData的输出值是这样的
{csrfmiddlewaretoken: "0M7QK3MMHqA5OnSF2u1A4038jUnfOzWWwMDbtc2KulMNBtt8iGhrBiEBWS4GSh9p"}
{username: "wenhao"}
{age: "37"}
{gender: "1"}
{gender: "0"}
{classes: "4"}

这里我们应该把gender设置为选中的才赋值给gender,所以这里我们的加一个判断，是checked的才赋值给gender
所以整个逻辑是这样的，数据采用字典形式存放var postData={}
    function bindsaveEvent() {
        $('#btnSave').click(function () {
            var postData = {};
            $('#addModal').find('input,select').each(function () {
                var name = $(this).attr('name');
                var value = $(this).val();
                if (name == 'gender'){
                    if ($(this).prop('checked')){
                        postData[name] = value
                    }
                }
                else{
                    postData[name] = value
                }
            })
            console.log(postData)
        })
    }
这样当点击Save按钮的时候拿到所有input和select的数据，然后提交给表单
所以当点击Save的时候我们还应该执行一个Ajax请求把数据发送给后端

    success:function (arg) {
        var dict = JSON.parse(arg);
        if (dict.status){

        }
        else{
            $('#errormsg').text(dict.msg)
        }
    }
因为这里的arg是字符串，所以我们这里用
JSON.parse 来转换格式为字典（对象）
JSON.stringify(dict) 字典转换成字符串

<button type="button" class="btn btn-primary" data-dismiss="modal" id="btnSave">Save</button>
data-dismiss 是一个定制的 HTML5 data 属性。用于关闭模态窗口。
所以这里我出现一个情况就是，错误已经在模态框上输出了，但是模态框马上就消失了，这个是因为data-dismiss="modal"的作用，所以这里我们给这个属性删除

Close 是需要这个属性的，因为他要关闭模态框

删除学生（主要绕的点就是获取用户的id和绑定触发删除事件（点击删除按钮绑定事件+确定删除用户信息按钮绑定事件））
这里我们给每行信息加上nid
<tr nid="{{ row.id }}">
这样的话我们就可以通过btnDelModal 找到他的父亲的父亲

$('tr[nid="'+nid+'"]').remove() 这个没有弄明白